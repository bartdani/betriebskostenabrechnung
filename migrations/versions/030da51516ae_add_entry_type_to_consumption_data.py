"""add entry_type to consumption_data

Revision ID: 030da51516ae
Revises: c37155871e54
Create Date: 2025-04-01 10:37:03.405684

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '030da51516ae'
down_revision = 'c37155871e54'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apartment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('apartment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_apartment_number'), ['number'], unique=True)

    op.create_table('cost_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('apartment_share',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('cost_type_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.ForeignKeyConstraint(['cost_type_id'], ['cost_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('apartment_id', 'cost_type_id', name='uq_apartment_cost_type_share')
    )
    op.create_table('consumption_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('cost_type_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('entry_type', sa.String(length=20), server_default='csv_import', nullable=False),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.ForeignKeyConstraint(['cost_type_id'], ['cost_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('consumption_data', schema=None) as batch_op:
        batch_op.create_index('ix_consumption_data_apartment_cost_type_date', ['apartment_id', 'cost_type_id', 'date'], unique=False)

    op.create_table('occupancy_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('number_of_occupants', sa.Integer(), nullable=False),
    sa.CheckConstraint('end_date IS NULL OR end_date > start_date', name='check_occupancy_period_dates'),
    sa.CheckConstraint('number_of_occupants > 0', name='check_positive_occupants'),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('occupancy_period', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_occupancy_period_apartment_id'), ['apartment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_occupancy_period_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_occupancy_period_start_date'), ['start_date'], unique=False)

    op.create_table('tenant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_info', sa.String(length=200), nullable=True),
    sa.Column('apartment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('apartment_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('rent_amount', sa.Float(), nullable=False),
    sa.Column('index_clause_base_value', sa.Float(), nullable=True),
    sa.Column('index_clause_base_date', sa.Date(), nullable=True),
    sa.Column('contract_pdf_filename', sa.String(length=255), nullable=True),
    sa.CheckConstraint('end_date IS NULL OR end_date > start_date', name='check_contract_dates'),
    sa.ForeignKeyConstraint(['apartment_id'], ['apartment.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contract')
    op.drop_table('tenant')
    with op.batch_alter_table('occupancy_period', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_occupancy_period_start_date'))
        batch_op.drop_index(batch_op.f('ix_occupancy_period_end_date'))
        batch_op.drop_index(batch_op.f('ix_occupancy_period_apartment_id'))

    op.drop_table('occupancy_period')
    with op.batch_alter_table('consumption_data', schema=None) as batch_op:
        batch_op.drop_index('ix_consumption_data_apartment_cost_type_date')

    op.drop_table('consumption_data')
    op.drop_table('apartment_share')
    op.drop_table('cost_type')
    with op.batch_alter_table('apartment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_apartment_number'))

    op.drop_table('apartment')
    # ### end Alembic commands ###
